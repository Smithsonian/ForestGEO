# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: ForestGEO Live Site Deployment Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-app-production:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: create env file (in frontend/ directory) -- production
        id: create-env-file-prod
        run: |
          touch frontend/.env
          echo AZURE_AD_CLIENT_SECRET=${{ secrets.AZURE_AD_CLIENT_SECRET_PRODUCTION }} >> frontend/.env
          echo AZURE_AD_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID_PRODUCTION }} >> frontend/.env
          echo AZURE_AD_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID_PRODUCTION }} >> frontend/.env
          echo NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} >> frontend/.env
          echo AZURE_SQL_USER=${{ secrets.AZURE_SQL_USER }} >> frontend/.env
          echo AZURE_SQL_PASSWORD=${{ secrets.AZURE_SQL_PASSWORD }} >> frontend/.env
          echo AZURE_SQL_SERVER=${{ secrets.AZURE_SQL_SERVER }} >> frontend/.env
          echo AZURE_SQL_DATABASE=${{ secrets.AZURE_SQL_DATABASE }} >> frontend/.env
          echo AZURE_SQL_PORT=${{ secrets.AZURE_SQL_PORT }} >> frontend/.env
          echo AZURE_STORAGE_SAS_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_SAS_CONNECTION_STRING }} >> frontend/.env
          echo AZURE_SQL_SCHEMA=${{ secrets.AZURE_SQL_SCHEMA }} >> frontend/.env
          echo AZURE_SQL_CATALOG_SCHEMA=${{ secrets.AZURE_SQL_CATALOG_SCHEMA }} >> frontend/.env
          echo AZURE_STORAGE_CONNECTION_STRING=${{ secrets.AZURE_STORAGE_CONNECTION_STRING }} >> frontend/.env
          echo NEXTAUTH_DEBUG=true >> frontend/.env
          echo NODE_ENV=production >> frontend/.env
          echo PORT=3000 >> frontend/.env
          echo FG_PAT=${{ secrets.FG_PAT }} >> frontend/.env
          echo OWNER=${{ secrets.OWNER }} >> frontend/.env
          echo REPO=${{ secrets.REPO }} >> frontend/.env

      - name: move into frontend --> npm install, build, and test
        run: |
          cd frontend/
          npm install
          npm run build
          npm run test --if-present

      - name: Move directories into build/standalone to reduce app load
        run: |
          mv ./frontend/build/static ./frontend/build/standalone/build
          mv ./frontend/public ./frontend/build/standalone

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: frontend/build/standalone

  deploy-app-production:
    needs: build-app-production
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: frontend/build/standalone

      - name: 'Deploy to Azure Web App (main)'
        id: deploy-to-webapp-main
        if: github.ref == 'refs/heads/main'
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'forestgeo-livesite'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_PRODUCTION }}
          package: frontend/build/standalone

      - name: Install MySQL client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Fetch notification recipients
        id: get_recipients
        env:
          DB_HOST: ${{ secrets.AZURE_SQL_SERVER }}
          DB_USER: ${{ secrets.AZURE_SQL_USER }}
          DB_PASS: ${{ secrets.AZURE_SQL_PASSWORD }}
          DB_NAME: ${{ secrets.AZURE_SQL_DATABASE }}
        run: |
          # grab only the email column, one per line, no headers
          EMAILS=$(mysql --batch --skip-column-names \
            -h "$DB_HOST" \
            -u "$DB_USER" \
            -p"$DB_PASS" \
            -D "$DB_NAME" \
            -e "SELECT Email FROM catalog.users WHERE IsAdmin IS TRUE;" \
            | paste -sd "," -)
          echo "emails=$EMAILS" >> $GITHUB_OUTPUT

      - name: Checkout code (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Collect merged commit messages
        id: collect_messages
        run: |
          MESSAGES=$(git log --no-merges \
          --format='- %s' \
          ${{ github.event.before }}..${{ github.sha }})

          echo "messages<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send deployment notification
        if: ${{ success() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.NOTIFS_EMAIL_SOURCE }}
          password: ${{ secrets.NOTIFS_EMAIL_PWD }}
          secure: false

          from: "ForestGEO Automated Notifications <${{ secrets.NOTIFS_EMAIL_SOURCE }}>"
          to: ${{ steps.get_recipients.outputs.emails }}

          # subject & body
          subject: "ðŸš€ Deployment to ${{ github.ref_name }} succeeded"
          body: |
            Hello ForestGEO Users,

            The branch `${{ github.ref_name }}` was just deployed successfully! 
            Please review the following commit details for more information:

            â€¢ Commit SHA: `${{ github.sha }}`
            â€¢ Commit message:
              > ${{ steps.collect_messages.outputs.messages }}

            Cheers,
            GitHub Actions