{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sites_ForestGEODataApi_name": {
            "defaultValue": "ForestGEODataApi",
            "type": "String"
        },
        "sites_hack2021_forestgeo_name": {
            "defaultValue": "hack2021-forestgeo",
            "type": "String"
        },
        "serverfarms_ASP_ForestGEO_aa4e_name": {
            "defaultValue": "ASP-ForestGEO-aa4e",
            "type": "String"
        },
        "serverfarms_ASP_ForestGEO_bb95_name": {
            "defaultValue": "ASP-ForestGEO-bb95",
            "type": "String"
        },
        "components_ForestGEODataApi_name": {
            "defaultValue": "ForestGEODataApi",
            "type": "String"
        },
        "components_hack2021_forestgeo_name": {
            "defaultValue": "hack2021-forestgeo",
            "type": "String"
        },
        "actionGroups_subscription_owner_name": {
            "defaultValue": "subscription-owner",
            "type": "String"
        },
        "storageAccounts_forestgeofuncapp_name": {
            "defaultValue": "forestgeofuncapp",
            "type": "String"
        },
        "storageAccounts_storageaccountfores8c2e_name": {
            "defaultValue": "storageaccountfores8c2e",
            "type": "String"
        },
        "databaseAccounts_forestgeo_westus_serverless_name": {
            "defaultValue": "forestgeo-westus-serverless",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name": {
            "defaultValue": "defaultworkspace-9d3c503d-1d8e-41d2-8f43-2717d9fb289b-wus",
            "type": "String"
        },
        "workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_externalid": {
            "defaultValue": "/subscriptions/9d3c503d-1d8e-41d2-8f43-2717d9fb289b/resourceGroups/defaultresourcegroup-wus/providers/microsoft.operationalinsights/workspaces/defaultworkspace-9d3c503d-1d8e-41d2-8f43-2717d9fb289b-wus",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2021-06-15",
            "name": "[parameters('databaseAccounts_forestgeo_westus_serverless_name')]",
            "location": "West US",
            "tags": {
                "defaultExperience": "Core (SQL)",
                "hidden-cosmos-mmspecial": ""
            },
            "kind": "GlobalDocumentDB",
            "identity": {
                "type": "None"
            },
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "analyticalStorageConfiguration": {
                    "schemaType": "WellDefined"
                },
                "databaseAccountOfferType": "Standard",
                "defaultIdentity": "FirstPartyIdentity",
                "networkAclBypass": "None",
                "disableLocalAuth": false,
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "locations": [
                    {
                        "locationName": "West US",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "cors": [],
                "capabilities": [
                    {
                        "name": "EnableServerless"
                    }
                ],
                "ipRules": [],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8
                    }
                },
                "networkAclBypassResourceIds": []
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-06-01",
            "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "SmartDetect",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": [
                    {
                        "name": "Monitoring Contributor",
                        "roleId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "useCommonAlertSchema": true
                    },
                    {
                        "name": "Monitoring Reader",
                        "roleId": "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
                        "useCommonAlertSchema": true
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-06-01",
            "name": "[parameters('actionGroups_subscription_owner_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "subOwners",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "email_-EmailAction-",
                        "emailAddress": "justin.pacholec@microsoft.com",
                        "useCommonAlertSchema": false
                    }
                ],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('components_ForestGEODataApi_name')]",
            "location": "westus3",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "WorkspaceResourceId": "[parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_externalid')]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('components_hack2021_forestgeo_name')]",
            "location": "westus",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "WorkspaceResourceId": "[parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_externalid')]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name')]",
            "location": "West US",
            "properties": {
                "provisioningState": "Succeeded",
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[parameters('storageAccounts_forestgeofuncapp_name')]",
            "location": "westus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[parameters('storageAccounts_storageaccountfores8c2e_name')]",
            "location": "westus3",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-01-15",
            "name": "[parameters('serverfarms_ASP_ForestGEO_aa4e_name')]",
            "location": "West US",
            "tags": {
                "for": "webapp"
            },
            "sku": {
                "name": "B1",
                "tier": "Basic",
                "size": "B1",
                "family": "B",
                "capacity": 1
            },
            "kind": "app",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-01-15",
            "name": "[parameters('serverfarms_ASP_ForestGEO_bb95_name')]",
            "location": "West US 3",
            "tags": {
                "for": "functionapp"
            },
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
            "apiVersion": "2021-06-15",
            "name": "[concat(parameters('databaseAccounts_forestgeo_westus_serverless_name'), '/forestgeo')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_forestgeo_westus_serverless_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "forestgeo"
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2021-06-15",
            "name": "[concat(parameters('databaseAccounts_forestgeo_westus_serverless_name'), '/00000000-0000-0000-0000-000000000001')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_forestgeo_westus_serverless_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Reader",
                "type": 0,
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_forestgeo_westus_serverless_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
            "apiVersion": "2021-06-15",
            "name": "[concat(parameters('databaseAccounts_forestgeo_westus_serverless_name'), '/00000000-0000-0000-0000-000000000002')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_forestgeo_westus_serverless_name'))]"
            ],
            "properties": {
                "roleName": "Cosmos DB Built-in Data Contributor",
                "type": 0,
                "assignableScopes": [
                    "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_forestgeo_westus_serverless_name'))]"
                ],
                "permissions": [
                    {
                        "dataActions": [
                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                        ],
                        "notDataActions": []
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/degradationindependencyduration')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationindependencyduration",
                    "DisplayName": "Degradation in dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/degradationindependencyduration')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationindependencyduration",
                    "DisplayName": "Degradation in dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/degradationinserverresponsetime')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationinserverresponsetime",
                    "DisplayName": "Degradation in server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/degradationinserverresponsetime')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationinserverresponsetime",
                    "DisplayName": "Degradation in server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/digestMailConfiguration')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "digestMailConfiguration",
                    "DisplayName": "Digest Mail Configuration",
                    "Description": "This rule describes the digest mail preferences",
                    "HelpUrl": "www.homail.com",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/digestMailConfiguration')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "digestMailConfiguration",
                    "DisplayName": "Digest Mail Configuration",
                    "Description": "This rule describes the digest mail preferences",
                    "HelpUrl": "www.homail.com",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/extension_billingdatavolumedailyspikeextension')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_billingdatavolumedailyspikeextension",
                    "DisplayName": "Abnormal rise in daily data volume (preview)",
                    "Description": "This detection rule automatically analyzes the billing data generated by your application, and can warn you about an unusual increase in your application's billing costs",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/billing-data-volume-daily-spike.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/extension_billingdatavolumedailyspikeextension')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_billingdatavolumedailyspikeextension",
                    "DisplayName": "Abnormal rise in daily data volume (preview)",
                    "Description": "This detection rule automatically analyzes the billing data generated by your application, and can warn you about an unusual increase in your application's billing costs",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/billing-data-volume-daily-spike.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/extension_canaryextension')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_canaryextension",
                    "DisplayName": "Canary extension",
                    "Description": "Canary extension",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/extension_canaryextension')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_canaryextension",
                    "DisplayName": "Canary extension",
                    "Description": "Canary extension",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/extension_exceptionchangeextension')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_exceptionchangeextension",
                    "DisplayName": "Abnormal rise in exception volume (preview)",
                    "Description": "This detection rule automatically analyzes the exceptions thrown in your application, and can warn you about unusual patterns in your exception telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/abnormal-rise-in-exception-volume.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/extension_exceptionchangeextension')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_exceptionchangeextension",
                    "DisplayName": "Abnormal rise in exception volume (preview)",
                    "Description": "This detection rule automatically analyzes the exceptions thrown in your application, and can warn you about unusual patterns in your exception telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/abnormal-rise-in-exception-volume.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/extension_memoryleakextension')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_memoryleakextension",
                    "DisplayName": "Potential memory leak detected (preview)",
                    "Description": "This detection rule automatically analyzes the memory consumption of each process in your application, and can warn you about potential memory leaks or increased memory consumption.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/memory-leak.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/extension_memoryleakextension')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_memoryleakextension",
                    "DisplayName": "Potential memory leak detected (preview)",
                    "Description": "This detection rule automatically analyzes the memory consumption of each process in your application, and can warn you about potential memory leaks or increased memory consumption.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/memory-leak.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/extension_securityextensionspackage')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_securityextensionspackage",
                    "DisplayName": "Potential security issue detected (preview)",
                    "Description": "This detection rule automatically analyzes the telemetry generated by your application and detects potential security issues.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/application-security-detection-pack.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/extension_securityextensionspackage')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_securityextensionspackage",
                    "DisplayName": "Potential security issue detected (preview)",
                    "Description": "This detection rule automatically analyzes the telemetry generated by your application and detects potential security issues.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/application-security-detection-pack.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/extension_traceseveritydetector')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_traceseveritydetector",
                    "DisplayName": "Degradation in trace severity ratio (preview)",
                    "Description": "This detection rule automatically analyzes the trace logs emitted from your application, and can warn you about unusual patterns in the severity of your trace telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/degradation-in-trace-severity-ratio.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/extension_traceseveritydetector')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_traceseveritydetector",
                    "DisplayName": "Degradation in trace severity ratio (preview)",
                    "Description": "This detection rule automatically analyzes the trace logs emitted from your application, and can warn you about unusual patterns in the severity of your trace telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/degradation-in-trace-severity-ratio.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/longdependencyduration')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "longdependencyduration",
                    "DisplayName": "Long dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/longdependencyduration')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "longdependencyduration",
                    "DisplayName": "Long dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/migrationToAlertRulesCompleted')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "migrationToAlertRulesCompleted",
                    "DisplayName": "Migration To Alert Rules Completed",
                    "Description": "A configuration that controls the migration state of Smart Detection to Smart Alerts",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": true,
                    "IsEnabledByDefault": false,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": false,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/migrationToAlertRulesCompleted')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "migrationToAlertRulesCompleted",
                    "DisplayName": "Migration To Alert Rules Completed",
                    "Description": "A configuration that controls the migration state of Smart Detection to Smart Alerts",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": true,
                    "IsEnabledByDefault": false,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": false,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/slowpageloadtime')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowpageloadtime",
                    "DisplayName": "Slow page load time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/slowpageloadtime')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowpageloadtime",
                    "DisplayName": "Slow page load time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_ForestGEODataApi_name'), '/slowserverresponsetime')]",
            "location": "westus3",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowserverresponsetime",
                    "DisplayName": "Slow server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_hack2021_forestgeo_name'), '/slowserverresponsetime')]",
            "location": "westus",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowserverresponsetime",
                    "DisplayName": "Slow server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_General|AlphabeticallySortedComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "All Computers with their most recent data",
                "category": "General Exploration",
                "query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize AggregatedValue = max(TimeGenerated) by Computer | limit 500000 | sort by Computer asc\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) by Computer | top 500000 | Sort Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_General|dataPointsPerManagementGroup')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Which Management Group is generating the most data points?",
                "category": "General Exploration",
                "query": "search * | summarize AggregatedValue = count() by ManagementGroupName\r\n// Oql: * | Measure count() by ManagementGroupName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_General|dataTypeDistribution')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Distribution of data Types",
                "category": "General Exploration",
                "query": "search * | extend Type = $table | summarize AggregatedValue = count() by Type\r\n// Oql: * | Measure count() by Type // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_General|StaleComputers')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Stale Computers (data older than 24 hours)",
                "category": "General Exploration",
                "query": "search not(ObjectName == \"Advisor Metrics\" or ObjectName == \"ManagedSpace\") | summarize lastdata = max(TimeGenerated) by Computer | limit 500000 | where lastdata < ago(24h)\r\n// Oql: NOT(ObjectName=\"Advisor Metrics\" OR ObjectName=ManagedSpace) | measure max(TimeGenerated) as lastdata by Computer | top 500000 | where lastdata < NOW-24HOURS // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|AllEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "All Events",
                "category": "Log Management",
                "query": "Event | sort by TimeGenerated desc\r\n// Oql: Type=Event // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|AllSyslog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "All Syslogs",
                "category": "Log Management",
                "query": "Syslog | sort by TimeGenerated desc\r\n// Oql: Type=Syslog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|AllSyslogByFacility')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records grouped by Facility",
                "category": "Log Management",
                "query": "Syslog | summarize AggregatedValue = count() by Facility\r\n// Oql: Type=Syslog | Measure count() by Facility // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|AllSyslogByProcessName')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records grouped by ProcessName",
                "category": "Log Management",
                "query": "Syslog | summarize AggregatedValue = count() by ProcessName\r\n// Oql: Type=Syslog | Measure count() by ProcessName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|AllSyslogsWithErrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "All Syslog Records with Errors",
                "category": "Log Management",
                "query": "Syslog | where SeverityLevel == \"error\" | sort by TimeGenerated desc\r\n// Oql: Type=Syslog SeverityLevel=error // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|AverageHTTPRequestTimeByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Average HTTP Request time by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by cIP\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|AverageHTTPRequestTimeHTTPMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Average HTTP Request time by HTTP Method",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = avg(TimeTaken) by csMethod\r\n// Oql: Type=W3CIISLog | Measure Avg(TimeTaken) by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|CountIISLogEntriesClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by cIP\r\n// Oql: Type=W3CIISLog | Measure count() by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|CountIISLogEntriesHTTPRequestMethod')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by HTTP Request Method",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csMethod\r\n// Oql: Type=W3CIISLog | Measure count() by csMethod // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|CountIISLogEntriesHTTPUserAgent')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by HTTP User Agent",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUserAgent\r\n// Oql: Type=W3CIISLog | Measure count() by csUserAgent // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|CountOfIISLogEntriesByHostRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by Host requested by client",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csHost\r\n// Oql: Type=W3CIISLog | Measure count() by csHost // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|CountOfIISLogEntriesByURLForHost')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by URL for the host \"www.contoso.com\" (replace with your own)",
                "category": "Log Management",
                "query": "search csHost == \"www.contoso.com\" | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog csHost=\"www.contoso.com\" | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|CountOfIISLogEntriesByURLRequestedByClient')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of IIS Log Entries by URL requested by client (without query strings)",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|CountOfWarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events with level \"Warning\" grouped by Event ID",
                "category": "Log Management",
                "query": "Event | where EventLevelName == \"warning\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event EventLevelName=warning | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|DisplayBreakdownRespondCodes')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Shows breakdown of response codes",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by scStatus\r\n// Oql: Type=W3CIISLog | Measure count() by scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|EventsByEventLog')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event Log",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by EventLog\r\n// Oql: Type=Event | Measure count() by EventLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|EventsByEventsID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event ID",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|EventsByEventSource')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events grouped by Event Source",
                "category": "Log Management",
                "query": "Event | summarize AggregatedValue = count() by Source\r\n// Oql: Type=Event | Measure count() by Source // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|EventsInOMBetween2000to3000')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Events in the Operations Manager Event Log whose Event ID is in the range between 2000 and 3000",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Operations Manager\" and EventID >= 2000 and EventID <= 3000 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Operations Manager\" EventID:[2000..3000] // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|EventsWithStartedinEventID')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Count of Events containing the word \"started\" grouped by EventID",
                "category": "Log Management",
                "query": "search in (Event) \"started\" | summarize AggregatedValue = count() by EventID\r\n// Oql: Type=Event \"started\" | Measure count() by EventID // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|FindMaximumTimeTakenForEachPage')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Find the maximum time taken for each page",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = max(TimeTaken) by csUriStem\r\n// Oql: Type=W3CIISLog | Measure Max(TimeTaken) by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|IISLogEntriesForClientIP')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "IIS Log Entries for a specific client IP Address (replace with your own)",
                "category": "Log Management",
                "query": "search cIP == \"192.168.0.1\" | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc | project csUriStem, scBytes, csBytes, TimeTaken, scStatus\r\n// Oql: Type=W3CIISLog cIP=\"192.168.0.1\" | Select csUriStem,scBytes,csBytes,TimeTaken,scStatus // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|ListAllIISLogEntries')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "All IIS Log Entries",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | sort by TimeGenerated desc\r\n// Oql: Type=W3CIISLog // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|NoOfConnectionsToOMSDKService')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "How many connections to Operations Manager's SDK service by day",
                "category": "Log Management",
                "query": "Event | where EventID == 26328 and EventLog == \"Operations Manager\" | summarize AggregatedValue = count() by bin(TimeGenerated, 1d) | sort by TimeGenerated desc\r\n// Oql: Type=Event EventID=26328 EventLog=\"Operations Manager\" | Measure count() interval 1DAY // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|ServerRestartTime')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "When did my servers initiate restart?",
                "category": "Log Management",
                "query": "search in (Event) \"shutdown\" and EventLog == \"System\" and Source == \"User32\" and EventID == 1074 | sort by TimeGenerated desc | project TimeGenerated, Computer\r\n// Oql: shutdown Type=Event EventLog=System Source=User32 EventID=1074 | Select TimeGenerated,Computer // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|Show404PagesList')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Shows which pages people are getting a 404 for",
                "category": "Log Management",
                "query": "search scStatus == 404 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by csUriStem\r\n// Oql: Type=W3CIISLog scStatus=404 | Measure count() by csUriStem // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|ShowServersThrowingInternalServerError')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Shows servers that are throwing internal server error",
                "category": "Log Management",
                "query": "search scStatus == 500 | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = count() by sComputerName\r\n// Oql: Type=W3CIISLog scStatus=500 | Measure count() by sComputerName // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|TotalBytesReceivedByEachAzureRoleInstance')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes received by each Azure Role Instance",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by RoleInstance\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by RoleInstance // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|TotalBytesReceivedByEachIISComputer')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes received by each IIS Computer",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by Computer | limit 500000\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|TotalBytesRespondedToClientsByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes responded back to clients by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|TotalBytesRespondedToClientsByEachIISServerIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes responded back to clients by each IIS ServerIP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(scBytes) by sIP\r\n// Oql: Type=W3CIISLog | Measure Sum(scBytes) by sIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|TotalBytesSentByClientIPAddress')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Total Bytes sent by Client IP Address",
                "category": "Log Management",
                "query": "search * | extend Type = $table | where Type == W3CIISLog | summarize AggregatedValue = sum(csBytes) by cIP\r\n// Oql: Type=W3CIISLog | Measure Sum(csBytes) by cIP // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PEF: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|WarningEvents')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "All Events with level \"Warning\"",
                "category": "Log Management",
                "query": "Event | where EventLevelName == \"warning\" | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLevelName=warning // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|WindowsFireawallPolicySettingsChanged')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "Windows Firewall Policy settings have changed",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | sort by TimeGenerated desc\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), '/LogManagement(', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'), ')_LogManagement|WindowsFireawallPolicySettingsChangedByMachines')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspaces_defaultworkspace_9d3c503d_1d8e_41d2_8f43_2717d9fb289b_wus_name'))]"
            ],
            "properties": {
                "displayName": "On which machines and how many times have Windows Firewall Policy settings changed",
                "category": "Log Management",
                "query": "Event | where EventLog == \"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" and EventID == 2008 | summarize AggregatedValue = count() by Computer | limit 500000\r\n// Oql: Type=Event EventLog=\"Microsoft-Windows-Windows Firewall With Advanced Security/Firewall\" EventID=2008 | measure count() by Computer | top 500000 // Args: {OQ: True; WorkspaceId: 00000000-0000-0000-0000-000000000000} // Settings: {PTT: True; SortI: True; SortF: True} // Version: 0.1.122",
                "version": 2
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_forestgeofuncapp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_forestgeofuncapp_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountfores8c2e_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountfores8c2e_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_forestgeofuncapp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_forestgeofuncapp_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountfores8c2e_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountfores8c2e_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_forestgeofuncapp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_forestgeofuncapp_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountfores8c2e_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountfores8c2e_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_forestgeofuncapp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_forestgeofuncapp_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountfores8c2e_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountfores8c2e_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-01-15",
            "name": "[parameters('sites_ForestGEODataApi_name')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_ForestGEO_bb95_name'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "forestgeodataapi.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "forestgeodataapi.scm.azurewebsites.net",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_ForestGEO_bb95_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 200,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "504D26E0FD96A003F069B4928F09AA54CA0AF31A303BB22E69D055346A8C3E59",
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-01-15",
            "name": "[parameters('sites_hack2021_forestgeo_name')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_ForestGEO_aa4e_name'))]"
            ],
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_hack2021_forestgeo_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_hack2021_forestgeo_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_ASP_ForestGEO_aa4e_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "504D26E0FD96A003F069B4928F09AA54CA0AF31A303BB22E69D055346A8C3E59",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/ftp')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_hack2021_forestgeo_name'), '/ftp')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/scm')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_hack2021_forestgeo_name'), '/scm')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/web')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$ForestGEODataApi",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "cors": {
                    "allowedOrigins": [
                        "http://localhost:3000",
                        "https://hack2021-forestgeo.azurewebsites.net",
                        "http://localhost:5000"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.0",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0,
                "functionAppScaleLimit": 200,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_hack2021_forestgeo_name'), '/web')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$hack2021-forestgeo",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.0",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0,
                "functionAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/0daddae52f274d88b1c6088c58313faf')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "ZipDeploy",
                "message": "Created via a push deployment",
                "start_time": "2021-10-14T17:49:35.7826491Z",
                "end_time": "2021-10-14T17:49:39.5344475Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/13ef24fc59ec4fbe8c483565a0c3f45a')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "ZipDeploy",
                "message": "Created via a push deployment",
                "start_time": "2021-10-13T19:43:37.4433955Z",
                "end_time": "2021-10-13T19:43:43.3848102Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/1e53db0731844cee83f143805cf0a58b')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "ZipDeploy",
                "message": "Created via a push deployment",
                "start_time": "2021-10-14T23:12:52.9025778Z",
                "end_time": "2021-10-14T23:12:56.1572902Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/3dc65710036e464ea475261cc9241a77')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "ZipDeploy",
                "message": "Created via a push deployment",
                "start_time": "2021-10-13T22:59:15.8315952Z",
                "end_time": "2021-10-13T22:59:18.8944668Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/6d0c6e9ce32d48cd883468598c0614b6')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "ZipDeploy",
                "message": "Created via a push deployment",
                "start_time": "2021-10-13T22:55:42.0074675Z",
                "end_time": "2021-10-13T22:55:48.0856239Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/95bdc1618a324dc09f3bb647b7453437')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "ZipDeploy",
                "message": "Created via a push deployment",
                "start_time": "2021-10-14T19:23:50.2817707Z",
                "end_time": "2021-10-14T19:23:54.5541667Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/fdb0a3073359458781ec4098ff2feaad')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "N/A",
                "deployer": "ZipDeploy",
                "message": "Created via a push deployment",
                "start_time": "2021-10-15T01:00:32.4033438Z",
                "end_time": "2021-10-15T01:00:35.2785491Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/GetCensus')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://forestgeodataapi.azurewebsites.net/admin/vfs/site/wwwroot/GetCensus/",
                "script_href": "https://forestgeodataapi.azurewebsites.net/admin/vfs/site/wwwroot/bin/WebApi.dll",
                "config_href": "https://forestgeodataapi.azurewebsites.net/admin/vfs/site/wwwroot/GetCensus/function.json",
                "test_data_href": "https://forestgeodataapi.azurewebsites.net/admin/vfs/data/Functions/sampledata/GetCensus.dat",
                "href": "https://forestgeodataapi.azurewebsites.net/admin/functions/GetCensus",
                "config": {},
                "invoke_url_template": "https://forestgeodataapi.azurewebsites.net/api/census",
                "language": "DotNetAssembly",
                "isDisabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/PostCensus')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://forestgeodataapi.azurewebsites.net/admin/vfs/site/wwwroot/PostCensus/",
                "script_href": "https://forestgeodataapi.azurewebsites.net/admin/vfs/site/wwwroot/bin/WebApi.dll",
                "config_href": "https://forestgeodataapi.azurewebsites.net/admin/vfs/site/wwwroot/PostCensus/function.json",
                "test_data_href": "https://forestgeodataapi.azurewebsites.net/admin/vfs/data/Functions/sampledata/PostCensus.dat",
                "href": "https://forestgeodataapi.azurewebsites.net/admin/functions/PostCensus",
                "config": {},
                "invoke_url_template": "https://forestgeodataapi.azurewebsites.net/api/census",
                "language": "DotNetAssembly",
                "isDisabled": false
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_ForestGEODataApi_name'), '/', parameters('sites_ForestGEODataApi_name'), '.azurewebsites.net')]",
            "location": "West US 3",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ForestGEODataApi_name'))]"
            ],
            "properties": {
                "siteName": "ForestGEODataApi",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2021-01-15",
            "name": "[concat(parameters('sites_hack2021_forestgeo_name'), '/', parameters('sites_hack2021_forestgeo_name'), '.azurewebsites.net')]",
            "location": "West US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_hack2021_forestgeo_name'))]"
            ],
            "properties": {
                "siteName": "hack2021-forestgeo",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
            "apiVersion": "2021-06-15",
            "name": "[concat(parameters('databaseAccounts_forestgeo_westus_serverless_name'), '/forestgeo/TreeMeasures')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('databaseAccounts_forestgeo_westus_serverless_name'), 'forestgeo')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_forestgeo_westus_serverless_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "TreeMeasures",
                    "indexingPolicy": {
                        "indexingMode": "consistent",
                        "automatic": true,
                        "includedPaths": [
                            {
                                "path": "/*"
                            }
                        ],
                        "excludedPaths": [
                            {
                                "path": "/\"_etag\"/?"
                            }
                        ]
                    },
                    "partitionKey": {
                        "paths": [
                            "/siteId"
                        ],
                        "kind": "Hash"
                    },
                    "uniqueKeyPolicy": {
                        "uniqueKeys": []
                    },
                    "conflictResolutionPolicy": {
                        "mode": "LastWriterWins",
                        "conflictResolutionPath": "/_ts"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_forestgeofuncapp_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_forestgeofuncapp_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_forestgeofuncapp_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountfores8c2e_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountfores8c2e_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountfores8c2e_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_forestgeofuncapp_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_forestgeofuncapp_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_forestgeofuncapp_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountfores8c2e_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_storageaccountfores8c2e_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountfores8c2e_name'))]"
            ],
            "properties": {
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_storageaccountfores8c2e_name'), '/default/forestgeodataapia319')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_storageaccountfores8c2e_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_storageaccountfores8c2e_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccounts_forestgeofuncapp_name'), '/default/forestgeo-middletieraf13')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_forestgeofuncapp_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_forestgeofuncapp_name'))]"
            ],
            "properties": {
                "accessTier": "TransactionOptimized",
                "shareQuota": 5120,
                "enabledProtocols": "SMB"
            }
        }
    ]
}