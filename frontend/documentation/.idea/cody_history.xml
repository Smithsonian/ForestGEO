<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChatHistory">
    <accountData>
      <list>
        <AccountData>
          <accountId value="VXNlcjozNjY4NTA=" />
          <chats>
            <list>
              <chat>
                <internalId value="3170a0d7-600b-45bf-9c82-1e13180b55e8" />
                <llm>
                  <llm>
                    <model value="openai/gpt-4o" />
                    <provider value="OpenAI" />
                    <tags>
                      <list>
                        <option value="gateway" />
                        <option value="pro" />
                        <option value="recommended" />
                        <option value="accuracy" />
                      </list>
                    </tags>
                    <title value="GPT-4o" />
                    <usage>
                      <list>
                        <option value="chat" />
                        <option value="edit" />
                      </list>
                    </usage>
                  </llm>
                </llm>
                <messages>
                  <list>
                    <message>
                      <speaker value="HUMAN" />
                      <text value="I'm new to working with Markdown. Can you build me a quick guide I can use to better take advantage of Markdown's syntax?" />
                    </message>
                    <message>
                      <speaker value="ASSISTANT" />
                      <text value="Sure! Here's a quick guide to help you get started with Markdown:&#10;&#10;### Markdown Basics&#10;&#10;#### Headings&#10;Use `#` for headings. The number of `#` symbols indicates the level of the heading.&#10;&#10;```markdown&#10;# Heading 1&#10;## Heading 2&#10;### Heading 3&#10;#### Heading 4&#10;##### Heading 5&#10;###### Heading 6&#10;```&#10;&#10;#### Emphasis&#10;- **Bold**: Use `**` or `__` around the text.&#10;- *Italic*: Use `*` or `_` around the text.&#10;- ~~Strikethrough~~: Use `~~` around the text.&#10;&#10;```markdown&#10;**Bold Text**&#10;__Bold Text__&#10;&#10;*Italic Text*&#10;_Italic Text_&#10;&#10;~~Strikethrough Text~~&#10;```&#10;&#10;#### Lists&#10;- **Unordered List**: Use `-`, `*`, or `+` followed by a space.&#10;- **Ordered List**: Use numbers followed by a period.&#10;&#10;```markdown&#10;- Item 1&#10;- Item 2&#10;  - Subitem 2.1&#10;  - Subitem 2.2&#10;&#10;1. First item&#10;2. Second item&#10;   1. Subitem 2.1&#10;   2. Subitem 2.2&#10;```&#10;&#10;#### Links&#10;- **Inline Link**: Use `[text](URL)`.&#10;- **Reference Link**: Use `[text][reference]` and define the reference elsewhere.&#10;&#10;```markdown&#10;[Google](https://www.google.com)&#10;&#10;[Google][1]&#10;&#10;[1]: https://www.google.com&#10;```&#10;&#10;#### Images&#10;- **Inline Image**: Use `![alt text](URL)`.&#10;- **Reference Image**: Use `![alt text][reference]` and define the reference elsewhere.&#10;&#10;```markdown&#10;![Alt text](https://www.example.com/image.jpg)&#10;&#10;![Alt text][image-ref]&#10;&#10;[image-ref]: https://www.example.com/image.jpg&#10;```&#10;&#10;#### Blockquotes&#10;Use `&gt;` for blockquotes.&#10;&#10;```markdown&#10;&gt; This is a blockquote.&#10;&gt; &#10;&gt; It can span multiple lines.&#10;```&#10;&#10;#### Code&#10;- **Inline Code**: Use backticks `` ` `` around the code.&#10;- **Code Block**: Use triple backticks `` ``` `` or indent with four spaces.&#10;&#10;```markdown&#10;Inline `code`.&#10;&#10;```&#10;Code block&#10;```&#10;&#10;    Indented code block&#10;```&#10;&#10;#### Horizontal Rule&#10;Use `---`, `***`, or `___`.&#10;&#10;```markdown&#10;---&#10;***&#10;___&#10;```&#10;&#10;#### Tables&#10;Use `|` to create tables. Separate headers and rows with `-`.&#10;&#10;```markdown&#10;| Header 1 | Header 2 |&#10;|----------|----------|&#10;| Row 1    | Data 1   |&#10;| Row 2    | Data 2   |&#10;```&#10;&#10;#### Task Lists&#10;Use `- [ ]` for unchecked and `- [x]` for checked items.&#10;&#10;```markdown&#10;- [ ] Task 1&#10;- [x] Task 2&#10;```&#10;&#10;### Advanced Markdown&#10;&#10;#### HTML in Markdown&#10;You can use HTML tags within Markdown for more complex formatting.&#10;&#10;```markdown&#10;&lt;p&gt;This is a paragraph in HTML.&lt;/p&gt;&#10;```&#10;&#10;#### Escaping Characters&#10;Use a backslash `\` to escape Markdown characters.&#10;&#10;```markdown&#10;\*This text is not italicized\*&#10;```&#10;&#10;#### Footnotes&#10;Use `[^1]` to create footnotes.&#10;&#10;```markdown&#10;Here is a footnote reference[^1].&#10;&#10;[^1]: This is the footnote.&#10;```&#10;&#10;### Conclusion&#10;Markdown is a powerful and easy-to-use syntax for formatting text. With this guide, you should be able to take advantage of its features to create well-structured documents. Happy writing!&#10;```" />
                    </message>
                    <message>
                      <speaker value="HUMAN" />
                      <text value="Can you tell me more about blockquotes? Can I add coloring or something?" />
                    </message>
                    <message>
                      <speaker value="ASSISTANT" />
                      <text value="Certainly! Blockquotes in Markdown are used to highlight a section of text, often for quoting someone or emphasizing a point. The basic syntax for a blockquote is to start the line with a `&gt;` character.&#10;&#10;### Basic Blockquote Syntax&#10;&#10;```markdown&#10;&gt; This is a blockquote.&#10;```&#10;&#10;This will render as:&#10;&#10;&gt; This is a blockquote.&#10;&#10;### Nested Blockquotes&#10;&#10;You can nest blockquotes by adding additional `&gt;` characters.&#10;&#10;```markdown&#10;&gt; This is a blockquote.&#10;&gt; &#10;&gt; &gt; This is a nested blockquote.&#10;```&#10;&#10;This will render as:&#10;&#10;&gt; This is a blockquote.&#10;&gt; &#10;&gt; &gt; This is a nested blockquote.&#10;&#10;### Blockquotes with Other Elements&#10;&#10;You can include other Markdown elements within blockquotes, such as headings, lists, and code blocks.&#10;&#10;```markdown&#10;&gt; ## This is a heading&#10;&gt; &#10;&gt; - This is a list item&#10;&gt; - Another list item&#10;&gt; &#10;&gt; ```&#10;&gt; This is a code block&#10;&gt; ```&#10;```&#10;&#10;This will render as:&#10;&#10;&gt; ## This is a heading&#10;&gt; &#10;&gt; - This is a list item&#10;&gt; - Another list item&#10;&gt; &#10;&gt; ```&#10;&gt; This is a code block&#10;&gt; ```&#10;&#10;### Adding Color to Blockquotes&#10;&#10;Markdown itself does not support coloring text or blockquotes directly. However, you can use HTML within your Markdown to achieve this. Note that not all Markdown renderers support HTML, so this may not work everywhere.&#10;&#10;```markdown&#10;&gt; &lt;span style=&quot;color: blue;&quot;&gt;This is a blue blockquote.&lt;/span&gt;&#10;```&#10;&#10;This will render as:&#10;&#10;&gt; &lt;span style=&quot;color: blue;&quot;&gt;This is a blue blockquote.&lt;/span&gt;&#10;&#10;### Custom Styling with CSS&#10;&#10;If you have control over the CSS of the environment where your Markdown is rendered (e.g., a website), you can apply custom styles to blockquotes.&#10;&#10;```html&#10;&lt;style&gt;&#10;blockquote {&#10;    color: blue;&#10;    background-color: #f9f9f9;&#10;    border-left: 10px solid #ccc;&#10;    padding: 10px;&#10;}&#10;&lt;/style&gt;&#10;&#10;&gt; This blockquote will have custom styling.&#10;```&#10;&#10;This will render as a blockquote with blue text, a light grey background, and a border on the left.&#10;&#10;### Conclusion&#10;&#10;Blockquotes are a versatile tool in Markdown for highlighting text. While Markdown itself doesn't support advanced styling like coloring, you can use HTML and CSS to achieve the desired effect if your rendering environment supports it." />
                    </message>
                    <message>
                      <speaker value="HUMAN" />
                      <text value="Is there a different version of Markdown that is setup for the Writerside IDE?" />
                    </message>
                    <message>
                      <speaker value="ASSISTANT" />
                      <text value="Yes, Writerside IDE uses a specific flavor of Markdown called **Writerside Markdown**. This version includes additional features and syntax tailored for technical writing and documentation. Below are some of the key features and syntax specific to Writerside Markdown:&#10;&#10;### Writerside Markdown Features&#10;&#10;#### Admonitions&#10;Admonitions are used to highlight important information such as notes, warnings, tips, etc.&#10;&#10;```markdown&#10;:::note&#10;This is a note.&#10;:::&#10;&#10;:::warning&#10;This is a warning.&#10;:::&#10;&#10;:::tip&#10;This is a tip.&#10;:::&#10;```&#10;&#10;#### Tabs&#10;You can create tabbed content to organize information in a more interactive way.&#10;&#10;```markdown&#10;:::tabs&#10;@tab Tab 1&#10;Content for Tab 1.&#10;&#10;@tab Tab 2&#10;Content for Tab 2.&#10;:::&#10;```&#10;&#10;#### Variables&#10;Variables allow you to reuse content across your documentation.&#10;&#10;```markdown&#10;{{variable_name}}&#10;```&#10;&#10;You can define variables in a separate file or within the same document.&#10;&#10;#### Code Blocks with Syntax Highlighting&#10;Writerside Markdown supports syntax highlighting for code blocks.&#10;&#10;```markdown&#10;```java&#10;public class HelloWorld {&#10;    public static void main(String[] args) {&#10;        System.out.println(&quot;Hello, World!&quot;);&#10;    }&#10;}&#10;```&#10;&#10;#### Links to API Documentation&#10;You can link directly to API documentation using a special syntax.&#10;&#10;```markdown&#10;[MyClass](api/MyClass)&#10;```&#10;&#10;#### Tables with Advanced Features&#10;Writerside Markdown supports tables with advanced features like column alignment.&#10;&#10;```markdown&#10;| Column 1 | Column 2 | Column 3 |&#10;|:-------- |:--------:| --------:|&#10;| Left     | Center   | Right    |&#10;```&#10;&#10;#### Images with Captions&#10;You can add captions to images.&#10;&#10;```markdown&#10;![Alt text](image_url &quot;Caption text&quot;)&#10;```&#10;&#10;#### Footnotes&#10;Footnotes are supported for adding additional information.&#10;&#10;```markdown&#10;Here is a footnote reference[^1].&#10;&#10;[^1]: This is the footnote.&#10;```&#10;&#10;### Example Document&#10;&#10;Here's an example document that uses some of the Writerside Markdown features:&#10;&#10;```markdown&#10;# Writerside Markdown Guide&#10;&#10;## Admonitions&#10;&#10;:::note&#10;This is a note.&#10;:::&#10;&#10;:::warning&#10;This is a warning.&#10;:::&#10;&#10;:::tip&#10;This is a tip.&#10;:::&#10;&#10;## Tabs&#10;&#10;:::tabs&#10;@tab Java&#10;```java&#10;public class HelloWorld {&#10;    public static void main(String[] args) {&#10;        System.out.println(&quot;Hello, World!&quot;);&#10;    }&#10;}&#10;```&#10;&#10;@tab Python&#10;```python&#10;print(&quot;Hello, World!&quot;)&#10;```&#10;:::&#10;&#10;## Variables&#10;&#10;The current version is {{version}}.&#10;&#10;## Links to API Documentation&#10;&#10;For more details, see the [MyClass](api/MyClass) documentation.&#10;&#10;## Tables&#10;&#10;| Column 1 | Column 2 | Column 3 |&#10;|:-------- |:--------:| --------:|&#10;| Left     | Center   | Right    |&#10;&#10;## Images with Captions&#10;&#10;![Alt text](https://example.com/image.jpg &quot;This is a caption&quot;)&#10;&#10;## Footnotes&#10;&#10;Here is a footnote reference[^1].&#10;&#10;[^1]: This is the footnote.&#10;```&#10;&#10;### Conclusion&#10;&#10;Writerside Markdown extends the basic Markdown syntax with additional features that are particularly useful for technical writing and documentation. This guide should help you get started with using Writerside Markdown in the Writerside IDE. Happy writing!&#10;```" />
                    </message>
                    <message>
                      <speaker value="HUMAN" />
                      <text value="Can you provide a more comprehensive guide to Writerside Markdown that I can use?" />
                    </message>
                    <message>
                      <speaker value="ASSISTANT" />
                      <text value="Certainly! Below is a more comprehensive guide to Writerside Markdown, covering its various features and syntax in detail.&#10;&#10;## Writerside Markdown Comprehensive Guide&#10;&#10;### 1. Basic Syntax&#10;&#10;#### Headings&#10;Use `#` for headings. The number of `#` symbols indicates the level of the heading.&#10;&#10;```markdown&#10;# Heading 1&#10;## Heading 2&#10;### Heading 3&#10;#### Heading 4&#10;##### Heading 5&#10;###### Heading 6&#10;```&#10;&#10;#### Emphasis&#10;- **Bold**: Use `**` or `__` around the text.&#10;- *Italic*: Use `*` or `_` around the text.&#10;- ~~Strikethrough~~: Use `~~` around the text.&#10;&#10;```markdown&#10;**Bold Text**&#10;__Bold Text__&#10;&#10;*Italic Text*&#10;_Italic Text_&#10;&#10;~~Strikethrough Text~~&#10;```&#10;&#10;#### Lists&#10;- **Unordered List**: Use `-`, `*`, or `+` followed by a space.&#10;- **Ordered List**: Use numbers followed by a period.&#10;&#10;```markdown&#10;- Item 1&#10;- Item 2&#10;  - Subitem 2.1&#10;  - Subitem 2.2&#10;&#10;1. First item&#10;2. Second item&#10;   1. Subitem 2.1&#10;   2. Subitem 2.2&#10;```&#10;&#10;#### Links&#10;- **Inline Link**: Use `[text](URL)`.&#10;- **Reference Link**: Use `[text][reference]` and define the reference elsewhere.&#10;&#10;```markdown&#10;[Google](https://www.google.com)&#10;&#10;[Google][1]&#10;&#10;[1]: https://www.google.com&#10;```&#10;&#10;#### Images&#10;- **Inline Image**: Use `![alt text](URL)`.&#10;- **Reference Image**: Use `![alt text][reference]` and define the reference elsewhere.&#10;&#10;```markdown&#10;![Alt text](https://www.example.com/image.jpg)&#10;&#10;![Alt text][image-ref]&#10;&#10;[image-ref]: https://www.example.com/image.jpg&#10;```&#10;&#10;#### Blockquotes&#10;Use `&gt;` for blockquotes.&#10;&#10;```markdown&#10;&gt; This is a blockquote.&#10;&gt; &#10;&gt; It can span multiple lines.&#10;```&#10;&#10;#### Code&#10;- **Inline Code**: Use backticks `` ` `` around the code.&#10;- **Code Block**: Use triple backticks `` ``` `` or indent with four spaces.&#10;&#10;```markdown&#10;Inline `code`.&#10;&#10;```&#10;Code block&#10;```&#10;&#10;    Indented code block&#10;```&#10;&#10;#### Horizontal Rule&#10;Use `---`, `***`, or `___`.&#10;&#10;```markdown&#10;---&#10;***&#10;___&#10;```&#10;&#10;#### Tables&#10;Use `|` to create tables. Separate headers and rows with `-`.&#10;&#10;```markdown&#10;| Header 1 | Header 2 |&#10;|----------|----------|&#10;| Row 1    | Data 1   |&#10;| Row 2    | Data 2   |&#10;```&#10;&#10;#### Task Lists&#10;Use `- [ ]` for unchecked and `- [x]` for checked items.&#10;&#10;```markdown&#10;- [ ] Task 1&#10;- [x] Task 2&#10;```&#10;&#10;### 2. Writerside-Specific Features&#10;&#10;#### Admonitions&#10;Admonitions are used to highlight important information such as notes, warnings, tips, etc.&#10;&#10;```markdown&#10;:::note&#10;This is a note.&#10;:::&#10;&#10;:::warning&#10;This is a warning.&#10;:::&#10;&#10;:::tip&#10;This is a tip.&#10;:::&#10;```&#10;&#10;#### Tabs&#10;You can create tabbed content to organize information in a more interactive way.&#10;&#10;```markdown&#10;:::tabs&#10;@tab Tab 1&#10;Content for Tab 1.&#10;&#10;@tab Tab 2&#10;Content for Tab 2.&#10;:::&#10;```&#10;&#10;#### Variables&#10;Variables allow you to reuse content across your documentation.&#10;&#10;```markdown&#10;{{variable_name}}&#10;```&#10;&#10;You can define variables in a separate file or within the same document.&#10;&#10;#### Code Blocks with Syntax Highlighting&#10;Writerside Markdown supports syntax highlighting for code blocks.&#10;&#10;```markdown&#10;```java&#10;public class HelloWorld {&#10;    public static void main(String[] args) {&#10;        System.out.println(&quot;Hello, World!&quot;);&#10;    }&#10;}&#10;```&#10;&#10;#### Links to API Documentation&#10;You can link directly to API documentation using a special syntax.&#10;&#10;```markdown&#10;[MyClass](api/MyClass)&#10;```&#10;&#10;#### Tables with Advanced Features&#10;Writerside Markdown supports tables with advanced features like column alignment.&#10;&#10;```markdown&#10;| Column 1 | Column 2 | Column 3 |&#10;|:-------- |:--------:| --------:|&#10;| Left     | Center   | Right    |&#10;```&#10;&#10;#### Images with Captions&#10;You can add captions to images.&#10;&#10;```markdown&#10;![Alt text](image_url &quot;Caption text&quot;)&#10;```&#10;&#10;#### Footnotes&#10;Footnotes are supported for adding additional information.&#10;&#10;```markdown&#10;Here is a footnote reference[^1].&#10;&#10;[^1]: This is the footnote.&#10;```&#10;&#10;### 3. Advanced Features&#10;&#10;#### HTML in Markdown&#10;You can use HTML tags within Markdown for more complex formatting.&#10;&#10;```markdown&#10;&lt;p&gt;This is a paragraph in HTML.&lt;/p&gt;&#10;```&#10;&#10;#### Escaping Characters&#10;Use a backslash `\` to escape Markdown characters.&#10;&#10;```markdown&#10;\*This text is not italicized\*&#10;```&#10;&#10;### 4. Example Document&#10;&#10;Here's an example document that uses some of the Writerside Markdown features:&#10;&#10;```markdown&#10;# Writerside Markdown Guide&#10;&#10;## Admonitions&#10;&#10;:::note&#10;This is a note.&#10;:::&#10;&#10;:::warning&#10;This is a warning.&#10;:::&#10;&#10;:::tip&#10;This is a tip.&#10;:::&#10;&#10;## Tabs&#10;&#10;:::tabs&#10;@tab Java&#10;```java&#10;public class HelloWorld {&#10;    public static void main(String[] args) {&#10;        System.out.println(&quot;Hello, World!&quot;);&#10;    }&#10;}&#10;```&#10;&#10;@tab Python&#10;```python&#10;print(&quot;Hello, World!&quot;)&#10;```&#10;:::&#10;&#10;## Variables&#10;&#10;The current version is {{version}}.&#10;&#10;## Links to API Documentation&#10;&#10;For more details, see the [MyClass](api/MyClass) documentation.&#10;&#10;## Tables&#10;&#10;| Column 1 | Column 2 | Column 3 |&#10;|:-------- |:--------:| --------:|&#10;| Left     | Center   | Right    |&#10;&#10;## Images with Captions&#10;&#10;![Alt text](https://example.com/image.jpg &quot;This is a caption&quot;)&#10;&#10;## Footnotes&#10;&#10;Here is a footnote reference[^1].&#10;&#10;[^1]: This is the footnote.&#10;```&#10;&#10;### Conclusion&#10;&#10;Writerside Markdown extends the basic Markdown syntax with additional features that are particularly useful for technical writing and documentation. This comprehensive guide should help you get started with using Writerside Markdown in the Writerside IDE. Happy writing!" />
                    </message>
                    <message>
                      <speaker value="HUMAN" />
                      <text value="within this snippet:&#10;&amp;gt; Which website should I use?&#10;&amp;gt;&amp;gt; If you want to use the most recent fully stabilized version, use the production website.&#10;&amp;gt; &amp;gt; {style=&amp;quot;warning&amp;quot;}&#10;&amp;gt;&#10;&amp;gt; &amp;gt; If you want to test out the latest features, use the development website.&#10;&amp;gt; &amp;gt; {style=&amp;quot;warning&amp;quot;}&#10;&#10;&amp;gt; Or try both! Either way, any and all feedback you can provide is greatly appreciated!&#10;&amp;gt; {style=&amp;quot;note&amp;quot;}&#10;&#10;I want to change the icon being assigned to the default blockquote (the open book icon). How can I do this&amp;gt;?" />
                    </message>
                    <message>
                      <speaker value="ASSISTANT" />
                      <text value="In Writerside Markdown, you can customize the appearance of blockquotes, including changing the icon, by using the `style` attribute. However, the specific syntax for changing icons may depend on the rendering engine or the specific implementation of Writerside Markdown you are using.&#10;&#10;If your environment supports custom attributes for blockquotes, you can try using a custom attribute to change the icon. Here’s an example of how you might do this:&#10;&#10;```markdown&#10;&gt; Which website should I use?&#10;&gt; &#10;&gt; &gt; If you want to use the most recent fully stabilized version, use the production website.&#10;&gt; &gt; {style=&quot;warning&quot; icon=&quot;⚠️&quot;}&#10;&gt; &#10;&gt; &gt; If you want to test out the latest features, use the development website.&#10;&gt; &gt; {style=&quot;warning&quot; icon=&quot;⚠️&quot;}&#10;&gt; &#10;&gt; Or try both! Either way, any and all feedback you can provide is greatly appreciated!&#10;&gt; {style=&quot;note&quot; icon=&quot;&quot;}&#10;```&#10;&#10;In this example, I added an `icon` attribute to each blockquote to specify a different icon. The `icon` attribute is not a standard Markdown feature, so its support depends on the specific Markdown renderer you are using.&#10;&#10;### Custom CSS for Icons&#10;&#10;If your Markdown renderer allows you to use custom CSS, you can define a custom class for blockquotes and use CSS to change the icon. Here’s how you can do it:&#10;&#10;1. **Define Custom CSS**:&#10;&#10;```css&#10;blockquote.warning::before {&#10;    content: &quot;⚠️&quot;;&#10;    margin-right: 8px;&#10;}&#10;&#10;blockquote.note::before {&#10;    content: &quot;&quot;;&#10;    margin-right: 8px;&#10;}&#10;```&#10;&#10;2. **Apply Custom Classes in Markdown**:&#10;&#10;```markdown&#10;&gt; Which website should I use?&#10;&gt; &#10;&gt; &gt; If you want to use the most recent fully stabilized version, use the production website.&#10;&gt; &gt; {class=&quot;warning&quot;}&#10;&gt; &#10;&gt; &gt; If you want to test out the latest features, use the development website.&#10;&gt; &gt; {class=&quot;warning&quot;}&#10;&gt; &#10;&gt; Or try both! Either way, any and all feedback you can provide is greatly appreciated!&#10;&gt; {class=&quot;note&quot;}&#10;```&#10;&#10;In this example, I used custom CSS to define the icons for blockquotes with the `warning` and `note` classes. Then, I applied these classes to the blockquotes in the Markdown.&#10;&#10;### Conclusion&#10;&#10;Changing the icon for blockquotes in Writerside Markdown depends on the specific features and capabilities of your Markdown renderer. If your renderer supports custom attributes or custom CSS, you can use these methods to change the icon. If not, you may need to consult the documentation for your specific Markdown renderer to see what options are available." />
                    </message>
                    <message>
                      <speaker value="HUMAN" />
                      <text value="For example, if I want to use an icon from MUI's Icons-Material, how could I do that?" />
                    </message>
                    <message>
                      <speaker value="ASSISTANT" />
                      <text value="To use an icon from MUI's Icons-Material in your Writerside Markdown, you would typically need to integrate the MUI library into your project and then use custom HTML or JSX within your Markdown to render the icons. Here’s a step-by-step guide on how you can achieve this:&#10;&#10;### Step 1: Install MUI Icons-Material&#10;&#10;First, you need to install the MUI Icons-Material package in your project. If you are using npm, you can do this by running:&#10;&#10;```bash&#10;npm install @mui/icons-material&#10;```&#10;&#10;Or if you are using yarn:&#10;&#10;```bash&#10;yarn add @mui/icons-material&#10;```&#10;&#10;### Step 2: Integrate MUI Icons in Your Markdown&#10;&#10;Since Markdown itself does not support JSX or direct integration with JavaScript libraries, you will need to use HTML within your Markdown and ensure that your Markdown renderer can process it. Here’s an example of how you can include an MUI icon in your Markdown:&#10;&#10;1. **Import the Icon in Your JavaScript/JSX File**:&#10;&#10;```jsx&#10;import WarningIcon from '@mui/icons-material/Warning';&#10;import NoteIcon from '@mui/icons-material/Note';&#10;```&#10;&#10;2. **Use the Icon in Your Markdown**:&#10;&#10;You can use custom HTML within your Markdown file to include the icon. Here’s an example:&#10;&#10;```markdown&#10;&gt; Which website should I use?&#10;&gt; &#10;&gt; &gt; &lt;WarningIcon /&gt; If you want to use the most recent fully stabilized version, use the production website.&#10;&gt; &#10;&gt; &gt; &lt;WarningIcon /&gt; If you want to test out the latest features, use the development website.&#10;&gt; &#10;&gt; Or try both! Either way, any and all feedback you can provide is greatly appreciated!&#10;&gt; &lt;NoteIcon /&gt;&#10;```&#10;&#10;### Step 3: Ensure Your Markdown Renderer Supports JSX/HTML&#10;&#10;Make sure your Markdown renderer can process JSX or HTML. If you are using a React-based project, you might be using a library like `react-markdown` that supports rendering HTML within Markdown.&#10;&#10;Here’s an example of how you can set up `react-markdown` to render HTML:&#10;&#10;```jsx&#10;import React from 'react';&#10;import ReactMarkdown from 'react-markdown';&#10;import WarningIcon from '@mui/icons-material/Warning';&#10;import NoteIcon from '@mui/icons-material/Note';&#10;&#10;const markdown = `&#10;&gt; Which website should I use?&#10;&gt; &#10;&gt; &gt; &lt;WarningIcon /&gt; If you want to use the most recent fully stabilized version, use the production website.&#10;&gt; &#10;&gt; &gt; &lt;WarningIcon /&gt; If you want to test out the latest features, use the development website.&#10;&gt; &#10;&gt; Or try both! Either way, any and all feedback you can provide is greatly appreciated!&#10;&gt; &lt;NoteIcon /&gt;&#10;`;&#10;&#10;const renderers = {&#10;  html: ({ value }) =&gt; &lt;div dangerouslySetInnerHTML={{ __html: value }} /&gt;,&#10;};&#10;&#10;function App() {&#10;  return (&#10;    &lt;div className=&quot;App&quot;&gt;&#10;      &lt;ReactMarkdown renderers={renderers} children={markdown} /&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}&#10;&#10;export default App;&#10;```&#10;&#10;### Conclusion&#10;&#10;By integrating MUI Icons-Material into your project and using custom HTML within your Markdown, you can include icons in your Writerside Markdown documents. Ensure that your Markdown renderer supports rendering HTML or JSX to achieve this. This approach allows you to leverage the rich set of icons provided by MUI in your documentation." />
                    </message>
                  </list>
                </messages>
                <updatedAt value="2024-08-21T16:37:52.6665438" />
              </chat>
            </list>
          </chats>
          <defaultLlm>
            <llm>
              <model value="openai/gpt-4o" />
              <provider value="OpenAI" />
              <tags>
                <list>
                  <option value="gateway" />
                  <option value="pro" />
                  <option value="recommended" />
                  <option value="accuracy" />
                </list>
              </tags>
              <title value="GPT-4o" />
              <usage>
                <list>
                  <option value="chat" />
                  <option value="edit" />
                </list>
              </usage>
            </llm>
          </defaultLlm>
        </AccountData>
      </list>
    </accountData>
  </component>
</project>